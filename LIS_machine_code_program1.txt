11010001 //INIT: rx = imm
11011000 //INIT: rx = imm
11011110 //INIT: rx = imm
10010011 //LWD: rx = M[ry]
11000011 //ADD: rx = rx + ry
11000011 //ADD: rx = rx + ry
11100000 //SLE: If rx < ry, then r3 = 1, Else r3 = 0
00100110 //JIF: If r3 = 1, then jump (PC = PC + imm), Else do nothing
00101100 //JIF: If r3 = 1, then jump (PC = PC + imm), Else do nothing
11011101 //INIT: rx = imm
10011111 //LWD: rx = M[ry]
10101101 //JIF: If r3 = 1, then jump (PC = PC + imm), Else do nothing
01010110 //INIT: rx = imm
10110001 //SWD: M[ry] = rx
00100101 //JIF: If r3 = 1, then jump (PC = PC + imm), Else do nothing
00101001 //JIF: If r3 = 1, then jump (PC = PC + imm), Else do nothing
00000011 //SUBR0: r0 = r0 - ry
11011101 //INIT: rx = imm
00101001 //JIF: If r3 = 1, then jump (PC = PC + imm), Else do nothing
01010110 //INIT: rx = imm
10010101 //LWD: rx = M[ry]
01010000 //INIT: rx = imm
10010000 //LWD: rx = M[ry]
00101001 //JIF: If r3 = 1, then jump (PC = PC + imm), Else do nothing
11111001 //ADDI: rx = rx + imm
01011100 //INIT: rx = imm
10011111 //LWD: rx = M[ry]
00000111 //SLER: If rx < r0, then r3 = 1, Else r3 = 0
00100011 //JIF: If r3 = 1, then jump (PC = PC + imm), Else do nothing
11011101 //INIT: rx = imm
00101001 //JIF: If r3 = 1, then jump (PC = PC + imm), Else do nothing
00000000 //HLT: End the program
